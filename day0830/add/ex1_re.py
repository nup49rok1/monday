'''
 정규표현식->고수준의 문자열을
                  검색하는 방법
                  
모듈->외부에서 불러다 사용하는 함수의 경우  
import 모듈명

모듈명.함수명(~)->findall()                         
'''
import re

ss='1234 abc 가나다라ABC_555_6'
#1.찾고자하는 패턴양식,2.찾고자하는 대상문자열
#ss라는 변수에서 '123'을 찾아라->[]
print(re.findall(r'123', ss))
#[0-9]->범위에 들어가는 숫자데이터를 찾기
print(re.findall(r'[0-9]', ss))
# +->1회이상 숫자들로 이어져 있는 데이터찾기
print(re.findall(r'[0-9]+', ss))
# * ->0회이상 ->숫자외의 공백도 찾기
print(re.findall(r'[0-9]*', ss))
# ? ->0 또는 1회이상
print(re.findall(r'[0-9]?', ss))
# {n}->ex {2}->2회이상 숫자
print(re.findall(r'[0-9]{2}', ss))
# {m,n}->ex {2,3}->2회에서 3회이상
print(re.findall(r'[0-9]{2,3}', ss))
#문자->.bc->첫글자는 아무거나,두번째는 bc로
#시작하는 문자열을 찾아라
print(re.findall(r'.bc', ss))
# ^1+->첫글자는 1로 시작하는 문자열 찾기
print(re.findall(r'^1+', ss))
# []->부정(조건식을 [ ]로 둘러싸면 부정의 의미
#1로 시작하지 않은 단어 찾기
print(re.findall(r'[^1]', ss))

#['123']
#['1', '2', '3', '4', '5', '5', '5', '6']
#['1234', '555', '6']
#['1234', '', '', '', '', '', '', '', '', '', '', '', '', '', '555', '', '6', '']
#['1', '2', '3', '4', '', '', '', '', '', '', '', '', '', '', '', '', '', '5', '5', '5', '', '6', '']
#['12', '34', '55']
#['123', '555']
#['abc']
#['1']
#['2', '3', '4', ' ', 'a', 'b', 'c', ' ', '가', '나', '다', '라', 'A', 'B', 'C', '_', '5', '5', '5', '_', '6']








